1Q) How did viewing a diff between two versions of a file help you see the bug that was introduced?

1A) It highlighed exactly what was changed so that I could ignore what was defitely working last time.

2Q) How could having easy access to the entire history of a file make you a more efficient programmer in the long term?

2A) Because I can see when I worked on the file.

3Q) What do you think are the pros and cons of manually choosing when to create a commit, like you do in Git, vs having versions automatically saved, like Google docs does?

3A) Pros: I can restrict commits to logical changes, making the commit history easier to navigate later on.

Cons: The onus is on the user to create a disciplined workflow in order for this system of versioning to work.

4Q) Why do you think some version control systems, like Git, allow saving multiple files in one commit, while others, like Google Docs, treat each file separately?

4A) I think because Google Docs are purposed to be self-contained. Each document is, sort of, its own repository. With Git I feel all of the files are expected to be inter-related, thus there is great value in tracking the relationships and change-relationships between the files.

5Q) How can you use the commands git log and git diff to view the history of files?

5A) With git log I can see all of the commits I have made.  Git diff will allow me to see what was different in each commit.

6Q) How might using version control make you more confident to make changes that could break something?

6A) It makes me much more confident because I'm assured that I have a working version to 'roll' back to.

7Q) Now that you have your workspace set up, what do you want to try using Git for?

7A) I'd like to use it for version control across all of my projects.